name: Go
on:
  pull_request:
    branches:
      - main
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
  push:
    branches:
      - main
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check out
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.6
      - name: build
        run: |
          go build ./...

  test:
    runs-on: ubuntu-latest
    steps:
      - name: check out
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.6
      - name: run test
        run: |
          go test -short -v -covermode=count -coverprofile=coverage.out | tee test_output.txt
          go tool cover -func=coverage.out | awk '/total:/ {print "| **" $$1 "** | **" $$3 "** |"}' | tee coverage.txt
          cat test_output.txt | grep 'ok.*coverage' | awk '{sub("github.com/your/package/", "", $$2); print "| " $$2 " | " $$5 " |"}' | tee -a coverage.txt
          echo "## Test Coverage Report" > coverage_with_header.txt
          echo "| Package           | Coverage |" >> coverage_with_header.txt
          echo "|-------------------|----------|" >> coverage_with_header.txt
          cat coverage.txt >> coverage_with_header.txt
          mv coverage_with_header.txt coverage.txt
          cat coverage.txt
      - name: Find existing comment
        if: github.event_name == 'pull_request'
        id: find_comment
        uses: peter-evans/find-comment@v2
        with:
          issue-number: ${{ github.event.number }}
          body-includes: "## Test Coverage Report"
      - name: Delete existing comment
        if: steps.find_comment.outputs.comment-id
        run: |
          curl \
            -X DELETE \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ steps.find_comment.outputs.comment-id }}"
      - name: Comment coverage on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body-path: "coverage.txt"

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: check out
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.6
      - name: staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...
